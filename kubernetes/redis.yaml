apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-ha-cluster-master-d1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-ha-cluster-redis-master-lbl
  template:
    metadata:
      name: redis-ha-cluster-master-p1
      labels:
        app: redis-ha-cluster-redis-master-lbl
        master: "true"
    spec:
      volumes:
        - hostPath:
            path: /tmp/data/1
          name: redis-directory-binding

      restartPolicy: Always

      containers:
      - name: redis-ha-cluster-redis-c1
        image: ninjafx/redis-sentinel-ha-cluster:1.0

        resources:
          requests:
            memory: "100Mi"
            cpu: .2
          limits:
            memory: "200Mi"
            cpu: .5

        imagePullPolicy: IfNotPresent

        ports:
        - containerPort: 6379

        volumeMounts:
          - mountPath: /redis-data
            name: redis-directory-binding
            readOnly: false

        env:
        - name: MASTER
          value: "true"

---

apiVersion:  apps/v1
kind: Deployment
metadata:
  name: redis-ha-cluster-sentinel-d1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-ha-cluster-sentinel-lbl
  template:
    metadata:
      name: redis-ha-cluster-sentinel-p1
      labels:
        app: redis-ha-cluster-sentinel-lbl
    spec:
      restartPolicy: Always
      containers:
      - name: redis-ha-cluster-sentinel-c1
        image: ninjafx/redis-sentinel-ha-cluster:1.0

        resources:
          requests:
            memory: "100Mi"
            cpu: .2
          limits:
            memory: "200Mi"
            cpu: .5

        imagePullPolicy: IfNotPresent

        ports:
        - containerPort: 26379

        env:
        - name: SENTINEL
          value: "true"
---

apiVersion: v1
kind: Service
metadata:
  labels:
    name: redis-ha-cluster-sentinel-service-lbl
  name: redis-ha-cluster-sentinel-service
spec:
  ports:
    - port: 26379
  selector:
    app: redis-ha-cluster-sentinel-lbl

---

apiVersion: v1
kind: Service
metadata:
  labels:
    name: redis-ha-cluster-startup-redis-master-service-lbl
  name: redis-ha-cluster-startup-redis-master-service
spec:
  ports:
    - port: 6379
  selector:
    app: redis-ha-cluster-redis-master-lbl

---

apiVersion:  apps/v1
kind: Deployment
metadata:
  name: redis-ha-cluster-redis-slave-d1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-ha-cluster-redis-slave-lbl
  template:
    metadata:
      name: redis-ha-cluster-redis-slave-p1
      labels:
        app: redis-ha-cluster-redis-slave-lbl
        slave: "true"
    spec:
    
      volumes:
        - hostPath:
            path: /tmp/data/2
          name: redis-directory-binding

      restartPolicy: Always

      containers:
      - name: redis-ha-cluster-redis-c1
        image: ninjafx/redis-sentinel-ha-cluster:1.0

        resources:
          requests:
            memory: "100Mi"
            cpu: .2
          limits:
            memory: "200Mi"
            cpu: .5

        imagePullPolicy: IfNotPresent

        ports:
        - containerPort: 6379

        volumeMounts:
          - mountPath: /redis-data
            name: redis-directory-binding
            readOnly: false
